% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggplot_donut.R
\name{ggplot_donut_percent}
\alias{ggplot_donut_percent}
\title{Create a Donut Percentage Plot}
\usage{
ggplot_donut_percent(p, accuracy = NULL, hsize = 4, size = 20, family = "Lato")
}
\arguments{
\item{p}{Proportion to plot. Must be a value between \code{0} and \code{1}.}

\item{accuracy}{A number to round to. Use (e.g.) \code{0.01} to show 2 decimal
places of precision. If \code{NULL}, the default, uses a heuristic that should
ensure breaks have the minimum number of digits needed to show the
difference between adjacent values.

Applied to rescaled data.}

\item{hsize}{Size of the donut hole. Defaults to \code{4}, and must be a non-negative value.}

\item{size}{Font size to use. Defaults to \code{20}.}

\item{family}{Font family to use. Defaults to \code{"Lato"}.}
}
\description{
Create a donut plot with the text value of the percentage in the center, using \code{\link[=ggplot_donut]{ggplot_donut()}}.
}
\details{
\code{ggplot_donut_percent()} creates a data frame and calls \code{\link[=ggplot_donut]{ggplot_donut()}} to create the base plot,
removes the legend, and adds a \code{\link[ggplot2:geom_text]{geom_text()}} centered in the plot.

The text label is formatted using \code{\link[scales:label_percent]{scales::label_percent()}} with the specified \code{accuracy}.
}
\examples{
library(showtext)

font_add_google("Lato", "Lato")
showtext_auto()
# workaround for https://github.com/yixuan/showtext/issues/51
showtext_opts(dpi = 192)

ggplot_donut_percent(0.6)
}
