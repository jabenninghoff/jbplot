% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/differently.R
\name{scale_color_differently_d}
\alias{scale_color_differently_d}
\alias{scale_fill_differently_d}
\alias{scale_color_differently_c}
\alias{scale_fill_differently_c}
\alias{scale_color_differently_b}
\alias{scale_fill_differently_b}
\alias{scale_colour_differently_d}
\alias{scale_colour_differently_c}
\alias{scale_colour_differently_b}
\title{Security Differently color scales}
\usage{
scale_color_differently_d(
  name = ggplot2::waiver(),
  ...,
  palette = "plot",
  direction = 1,
  aesthetics = "color"
)

scale_fill_differently_d(
  name = ggplot2::waiver(),
  ...,
  palette = "plot",
  direction = 1,
  aesthetics = "fill"
)

scale_color_differently_c(
  name = ggplot2::waiver(),
  ...,
  palette = "plot",
  direction = 1,
  values = NULL,
  na.value = "grey50",
  guide = "colorbar",
  aesthetics = "color"
)

scale_fill_differently_c(
  name = ggplot2::waiver(),
  ...,
  palette = "plot",
  direction = 1,
  values = NULL,
  na.value = "grey50",
  guide = "colorbar",
  aesthetics = "fill"
)

scale_color_differently_b(
  name = ggplot2::waiver(),
  ...,
  palette = "plot",
  direction = 1,
  values = NULL,
  na.value = "grey50",
  guide = "colorsteps",
  aesthetics = "color"
)

scale_fill_differently_b(
  name = ggplot2::waiver(),
  ...,
  palette = "plot",
  direction = 1,
  values = NULL,
  na.value = "grey50",
  guide = "colorsteps",
  aesthetics = "fill"
)
}
\arguments{
\item{name}{The name of the scale. Used as the axis or legend title. If
\code{waiver()}, the default, the name of the scale is taken from the first
mapping used for that aesthetic. If \code{NULL}, the legend title will be
omitted.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:discrete_scale]{ggplot2::discrete_scale()}},
\code{\link[ggplot2:continuous_scale]{ggplot2::continuous_scale()}}, or \code{\link[ggplot2:binned_scale]{ggplot2::binned_scale()}} to control name, limits, breaks,
labels and so forth.}

\item{palette}{Palette to use, one of: \code{primary}, \code{status}, or \code{plot} (the default).}

\item{direction}{Sets the order of colors in the scale. If 1, (the default) colors are as output
by \link{differently_palettes}. If -1, the order of colors is reversed.}

\item{aesthetics}{Character string or vector of character strings listing the
name(s) of the aesthetic(s) that this scale works with. This can be useful, for
example, to apply color settings to the \code{color} and \code{fill} aesthetics at the
same time, via \code{aesthetics = c("color", "fill")}.}

\item{values}{if colours should not be evenly positioned along the gradient
this vector gives the position (between 0 and 1) for each colour in the
\code{colours} vector. See \code{\link[scales:rescale]{rescale()}} for a convenience function
to map an arbitrary range to between 0 and 1.}

\item{na.value}{Missing values will be replaced with this value.}

\item{guide}{A function used to create a guide or its name. See
\code{\link[ggplot2:guides]{guides()}} for more information.}
}
\description{
Security Differently branded color scales.
}
\examples{
library(ggplot2)
# Use differently_d with discrete data
txsamp <- subset(txhousing, city \%in\%
  c("Houston", "Fort Worth", "San Antonio", "Dallas", "Austin"))
(d <- ggplot(data = txsamp, aes(x = sales, y = median)) +
  geom_point(aes(color = city)))
d + scale_color_differently_d()

# Change scale label
d + scale_color_differently_d("City\nCenter")

# Select palette to use, see ?jbplot::pal_differently for more details
d + scale_color_differently_d(palette = "primary")

# scale_fill_differently_d works just the same as
# scale_color_differently_d but for fill colors
p <- ggplot(txsamp, aes(x = median, fill = city)) +
  geom_histogram(position = "dodge", binwidth = 15000)
p + scale_fill_differently_d()
# the order of color can be reversed
p + scale_fill_differently_d(direction = -1)

# Use differently_c with continuous data
(v <- ggplot(faithfuld) +
  geom_tile(aes(waiting, eruptions, fill = density)))
v + scale_fill_differently_c()
v + scale_fill_differently_c(palette = "primary")

# Use differently_b to bin continuous data before mapping
v + scale_fill_differently_b()

}
